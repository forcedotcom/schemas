---
version: 2.1

orbs:
  slack: circleci/slack@3.4.2

parameters:
  publish:
    type: boolean
    default: false
  publish-type:
    type: string
    default: patch

_refs:
  defaults: &defaults
    working_directory: ~/cli
    docker:
      - image: node:12
  ssh-config: &ssh-config
    fingerprints:
      - "b9:23:16:10:0e:93:d1:68:0e:76:4e:90:a0:ed:01:a5"
  restore_cache: &restore_cache
    keys:
      - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package.json"}}
      - v1-npm-{{checksum ".circleci/config.yml"}}
  gh-config: &gh-config
    name: Configuring GitHub
    command: |
      git config credential.helper 'cache --timeout=120'
      git config user.email "$GH_EMAIL"
      git config user.name "Release Bot"
  install: &install
    name: Install dependencies
    command: |
      git --version
      npm --version
      node --version
      npm install
  test: &test
    name: Run tests
    command: npm run test

jobs:
  node-latest: &node-test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install
      - run: *test
  node-12:
    <<: *node-test
    docker:
      - image: node:12
  cache:
    <<: *node-test
    steps:
      - checkout
      - run: *install
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package.json"}}
          paths:
            - ~/cli/node_modules

  build-artifact:
    description: 'Building and archiving tarball'
    <<: *defaults
    steps:
        - checkout
        - restore_cache: *restore_cache
        - run: *install
        - run: npm pack
        - run:
            name: Staging artifact
            command: |
                mkdir artifact
                find . -name "*.tgz" -type f -exec cp {} ./artifact \;
        - store_artifacts:
            path: ./artifact
  
  publish:
    <<: *defaults
    steps:
      - slack/notify:
          channel: "pdt_releases"
          color: "#FFDEAD"
          message: "Starting Publish for schemas"
      - add_ssh_keys: *ssh-config
      - checkout
      - restore_cache: *restore_cache
      - run: *gh-config
      - run: *install
      - run:
          name: Bump package version
          command: |
            npm version << pipeline.parameters.publish-type >> --no-git-tag-version
            git add package.json package-lock.json
            export RELEASE_TAG="$(node -pe "require('./package.json').version")"
            echo "export RELEASE_VERSION=$RELEASE_TAG" >> $BASH_ENV
            source $BASH_ENV
            git commit -m "Updated version $RELEASE_TAG"
      - run:
          name: Set .npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run: npm publish --access public
      - run: git push origin main
      - run:
          name: Tag the release and push to repo
          command: |
            git tag v${RELEASE_VERSION}
            git push --tags
      - slack/notify:
          channel: "pdt_releases"
          color: "#9bcd9b"
          message: "schemas v${RELEASE_VERSION} has been published to npm"
      - slack/status:
          channel: "pdt_releases"
          fail_only: true

workflows:
  version: 2.1

  commit-workflow:
    unless: << pipeline.parameters.publish >>
    jobs:
      - node-latest
      - node-12
      - build-artifact
      - cache:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

  publish-workflow:
    when: << pipeline.parameters.publish >>
    jobs:
      - slack/approval-notification:
          message: Pending Approval for Publishing schemas
          channel: "pdt_releases"
          color: "#0E1111"
      - node-latest
      - node-12
      - build-artifact
      - hold: # Requires manual approval in Circle Ci
          type: approval
      - publish:
          context: 
            - IEAT_keys
          filters:
            branches:
              only:
                - main
          requires:
            - node-latest
            - node-12
            - build-artifact
            - hold

  scheduled-workflow:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - node-latest
      - node-12
